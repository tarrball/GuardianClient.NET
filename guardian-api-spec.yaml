openapi: 3.0.3
info:
  title: Guardian Content API
  description: |
    The Guardian Content API provides access to Guardian news content, tags, sections, and editions.
    
    ## Authentication
    All requests require an API key passed as a query parameter: `api-key`
    
    ## Rate Limiting
    The API is rate-limited. For elevated limits, please contact The Guardian.
    
    ## HTTPS Support
    Available at https://content.guardianapis.com/
  version: "1.0.0"
  contact:
    name: Guardian API Support
    url: https://groups.google.com/group/guardian-api-talk/
  license:
    name: Guardian API Terms
    url: https://open-platform.theguardian.com/access/

servers:
  - url: https://content.guardianapis.com
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /search:
    get:
      summary: Search for content
      description: Returns all pieces of content in the API with optional filtering
      operationId: searchContent
      tags:
        - Content
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - name: q
          in: query
          description: |
            Search query supporting AND, OR, NOT operators and exact phrase queries using double quotes.
            Examples: "debate", "debate AND economy", "debate AND NOT immigration", "debate AND (economy OR immigration)"
          schema:
            type: string
          example: "debate AND economy"
        - name: query-fields
          in: query
          description: Specify which indexed fields to search in
          schema:
            type: array
            items:
              type: string
              enum: [body, thumbnail]
          style: form
          explode: false
          example: ["body", "thumbnail"]
        - name: section
          in: query
          description: Return only content in specified sections (supports boolean operators)
          schema:
            type: string
          example: "football"
        - name: reference
          in: query
          description: Return only content with specified references
          schema:
            type: string
          example: "isbn/9780718178949"
        - name: reference-type
          in: query
          description: Return only content with references of specified types
          schema:
            type: string
          example: "isbn"
        - name: tag
          in: query
          description: Return only content with specified tags (supports boolean operators)
          schema:
            type: string
          example: "technology/apple"
        - name: rights
          in: query
          description: Return only content with specified rights
          schema:
            type: string
            enum: [syndicatable, subscription-databases]
        - name: ids
          in: query
          description: Return only content with specified IDs
          schema:
            type: string
          example: "technology/2014/feb/17/flappy-bird-clones-apple-google"
        - name: production-office
          in: query
          description: Return only content from specified production offices
          schema:
            type: string
          example: "aus"
        - name: lang
          in: query
          description: Return only content in specified languages (ISO language codes)
          schema:
            type: string
          example: "en"
        - name: star-rating
          in: query
          description: Return only content with specified star rating
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: from-date
          in: query
          description: Return only content published on or after this date
          schema:
            type: string
            format: date
          example: "2014-02-16"
        - name: to-date
          in: query
          description: Return only content published on or before this date
          schema:
            type: string
            format: date
          example: "2014-02-17"
        - name: use-date
          in: query
          description: Type of date to use for filtering
          schema:
            type: string
            enum: [published, first-publication, newspaper-edition, last-modified]
            default: published
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page-size
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: order-by
          in: query
          description: Sort order for results
          schema:
            type: string
            enum: [newest, oldest, relevance]
            default: newest
        - name: order-date
          in: query
          description: Type of date to use for ordering
          schema:
            type: string
            enum: [published, newspaper-edition, last-modified]
            default: published
        - name: show-fields
          in: query
          description: Additional fields to include with content
          schema:
            type: array
            items:
              type: string
              enum: [
                trailText, headline, showInRelatedContent, body, lastModified,
                hasStoryPackage, score, standfirst, shortUrl, thumbnail, wordcount,
                commentable, isPremoderated, allowUgc, byline, publication,
                internalPageCode, productionOffice, shouldHideAdverts, liveBloggingNow,
                commentCloseDate, starRating, all
              ]
          style: form
          explode: false
        - name: show-tags
          in: query
          description: Types of tags to include
          schema:
            type: array
            items:
              type: string
              enum: [
                blog, contributor, keyword, newspaper-book, newspaper-book-section,
                publication, series, tone, type, all
              ]
          style: form
          explode: false
        - name: show-section
          in: query
          description: Include section metadata
          schema:
            type: boolean
        - name: show-blocks
          in: query
          description: |
            Include content blocks. Supports:
            - main, body, all
            - body:latest (default 20), body:latest:10 (limit 10)
            - body:oldest, body:oldest:10
            - body:<block-id> (specific block)
            - body:around:<block-id> (block + 20 around it)
            - body:around:<block-id>:10 (block + 10 around it)
            - body:key-events
            - body:published-since:<timestamp>
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: show-elements
          in: query
          description: Include media elements
          schema:
            type: array
            items:
              type: string
              enum: [audio, image, video, all]
          style: form
          explode: false
        - name: show-references
          in: query
          description: Include reference data
          schema:
            type: array
            items:
              type: string
              enum: [
                author, bisac-prefix, esa-cricket-match, esa-football-match,
                esa-football-team, esa-football-tournament, isbn, imdb, musicbrainz,
                musicbrainzgenre, opta-cricket-match, opta-football-match,
                opta-football-team, opta-football-tournament, pa-football-competition,
                pa-football-match, pa-football-team, r1-film, reuters-index-ric,
                reuters-stock-ric, witness-assignment
              ]
          style: form
          explode: false
        - name: show-rights
          in: query
          description: Include rights information
          schema:
            type: array
            items:
              type: string
              enum: [syndicatable, subscription-databases, all]
          style: form
          explode: false
        - name: format
          in: query
          description: Response format
          schema:
            type: string
            enum: [json]
            default: json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSearchResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded

  /content/{itemId}/next:
    get:
      summary: Get next page of content for deep pagination
      description: |
        For deep pagination beyond standard page limits. Use the ID of the last content item
        from a previous search to get the next set of results.
      operationId: getNextContent
      tags:
        - Content
      parameters:
        - name: itemId
          in: path
          required: true
          description: ID of the last content item from previous results
          schema:
            type: string
          example: "food/2022/jul/04/peperonata-sausages-recipe-rachel-roddy"
        - $ref: '#/components/parameters/ApiKey'
        - name: q
          in: query
          description: Original search query (must match original search)
          schema:
            type: string
        - name: page-size
          in: query
          description: Number of items per page (must match original search)
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: order-by
          in: query
          description: Sort order (must match original search)
          schema:
            type: string
            enum: [newest, oldest, relevance]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSearchResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded

  /tags:
    get:
      summary: Search for tags
      description: Returns all tags in the API with optional filtering
      operationId: searchTags
      tags:
        - Tags
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - name: q
          in: query
          description: Return tags containing this free text
          schema:
            type: string
          example: "sausages"
        - name: web-title
          in: query
          description: Return tags starting with this free text
          schema:
            type: string
          example: "sausa"
        - name: type
          in: query
          description: Return only tags of specified type
          schema:
            type: string
            enum: [keyword, series, contributor, tone, type, blog]
        - name: section
          in: query
          description: Return only tags in specified sections (supports boolean operators)
          schema:
            type: string
          example: "football"
        - name: reference
          in: query
          description: Return only tags with specified references
          schema:
            type: string
          example: "isbn/9780349108391"
        - name: reference-type
          in: query
          description: Return only tags with references of specified types
          schema:
            type: string
          example: "isbn"
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page-size
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: show-references
          in: query
          description: Include reference data
          schema:
            type: array
            items:
              type: string
              enum: [
                author, bisac-prefix, esa-cricket-match, esa-football-match,
                esa-football-team, esa-football-tournament, isbn, imdb, musicbrainz,
                musicbrainzgenre, opta-cricket-match, opta-football-match,
                opta-football-team, opta-football-tournament, pa-football-competition,
                pa-football-match, pa-football-team, r1-film, reuters-index-ric,
                reuters-stock-ric, witness-assignment
              ]
          style: form
          explode: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded

  /sections:
    get:
      summary: Get all sections
      description: Returns all sections in the API
      operationId: getSections
      tags:
        - Sections
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - name: q
          in: query
          description: Return sections based on query term
          schema:
            type: string
          example: "business"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded

  /editions:
    get:
      summary: Get all editions
      description: Returns all editions in the API (regionalized front pages)
      operationId: getEditions
      tags:
        - Editions
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - name: q
          in: query
          description: Return editions based on query term
          schema:
            type: string
          example: "UK"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditionsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '429':
          description: Rate limit exceeded

  /{itemPath}:
    get:
      summary: Get single item by path
      description: |
        Returns all data for a single item (content, tag, or section) by its path.
        The path matches the URL structure on theguardian.com.
      operationId: getSingleItem
      tags:
        - Single Item
      parameters:
        - name: itemPath
          in: path
          required: true
          description: |
            The path to the item. Examples:
            - Content: technology/2014/feb/18/doge-such-questions-very-answered
            - Tag: world/france
            - Section: lifeandstyle
          schema:
            type: string
          example: "technology/2014/feb/18/doge-such-questions-very-answered"
        - $ref: '#/components/parameters/ApiKey'
        - name: show-story-package
          in: query
          description: Display related content in same story package
          schema:
            type: boolean
        - name: show-editors-picks
          in: query
          description: Display editor-chosen content for tags/sections
          schema:
            type: boolean
        - name: show-most-viewed
          in: query
          description: Display most viewed content
          schema:
            type: boolean
        - name: show-related
          in: query
          description: Display related content items
          schema:
            type: boolean
        - name: show-fields
          in: query
          description: Additional fields to include
          schema:
            type: array
            items:
              type: string
              enum: [
                trailText, headline, showInRelatedContent, body, lastModified,
                hasStoryPackage, score, standfirst, shortUrl, thumbnail, wordcount,
                commentable, isPremoderated, allowUgc, byline, publication,
                internalPageCode, productionOffice, shouldHideAdverts, liveBloggingNow,
                commentCloseDate, starRating, all
              ]
          style: form
          explode: false
        - name: show-tags
          in: query
          description: Types of tags to include
          schema:
            type: array
            items:
              type: string
              enum: [
                blog, contributor, keyword, newspaper-book, newspaper-book-section,
                publication, series, tone, type, all
              ]
          style: form
          explode: false
        - name: show-sections
          in: query
          description: Include section metadata
          schema:
            type: boolean
        - name: show-blocks
          in: query
          description: |
            Include content blocks. Supports:
            - main, body, all
            - body:latest (default 20), body:latest:10 (limit 10)
            - body:oldest, body:oldest:10
            - body:<block-id> (specific block)
            - body:around:<block-id> (block + 20 around it)
            - body:around:<block-id>:10 (block + 10 around it)
            - body:key-events
            - body:published-since:<timestamp>
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: show-elements
          in: query
          description: Include media elements
          schema:
            type: array
            items:
              type: string
              enum: [audio, image, video, all]
          style: form
          explode: false
        - name: show-references
          in: query
          description: Include reference data
          schema:
            type: array
            items:
              type: string
              enum: [
                author, bisac-prefix, esa-cricket-match, esa-football-match,
                esa-football-team, esa-football-tournament, isbn, imdb, musicbrainz,
                musicbrainzgenre, opta-cricket-match, opta-football-match,
                opta-football-team, opta-football-tournament, pa-football-competition,
                pa-football-match, pa-football-team, r1-film, reuters-index-ric,
                reuters-stock-ric, witness-assignment
              ]
          style: form
          explode: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleItemResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - invalid API key
        '404':
          description: Item not found
        '429':
          description: Rate limit exceeded

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: api-key
      description: API key for authentication

  parameters:
    ApiKey:
      name: api-key
      in: query
      required: true
      description: Your Guardian API key
      schema:
        type: string
      example: "test"

  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          type: string
          description: API response status
          enum: [ok, error]
          example: "ok"
        userTier:
          type: string
          description: User's API tier
          example: "developer"
        total:
          type: integer
          description: Total number of results available
          example: 1
      required:
        - status

    ContentItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier/path to the content
          example: "world/2022/oct/21/russia-ukraine-war-latest-what-we-know-on-day-240-of-the-invasion"
        type:
          type: string
          description: Type of content
          example: "article"
        sectionId:
          type: string
          description: ID of the section
          example: "world"
        sectionName:
          type: string
          description: Name of the section
          example: "World news"
        webPublicationDate:
          type: string
          format: date-time
          description: Date and time of publication
          example: "2022-10-21T14:06:14Z"
        webTitle:
          type: string
          description: Title of the content
          example: "Russia-Ukraine war latest: what we know on day 240 of the invasion"
        webUrl:
          type: string
          format: uri
          description: URL of the HTML content
          example: "https://www.theguardian.com/world/2022/oct/21/russia-ukraine-war-latest-what-we-know-on-day-240-of-the-invasion"
        apiUrl:
          type: string
          format: uri
          description: URL of the API content
          example: "https://content.guardianapis.com/world/2022/oct/21/russia-ukraine-war-latest-what-we-know-on-day-240-of-the-invasion"
        isHosted:
          type: boolean
          description: Whether the content is hosted
          example: false
        pillarId:
          type: string
          description: ID of the pillar
          example: "pillar/news"
        pillarName:
          type: string
          description: Name of the pillar
          example: "News"
        fields:
          $ref: '#/components/schemas/ContentFields'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Element'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        blocks:
          $ref: '#/components/schemas/ContentBlocks'
      required:
        - id
        - type
        - webTitle
        - webUrl
        - apiUrl

    ContentFields:
      type: object
      description: Additional fields for content (when requested via show-fields)
      properties:
        trailText:
          type: string
          description: Trail text HTML
        headline:
          type: string
          description: Headline HTML
        showInRelatedContent:
          type: string
          description: Whether content can appear in related content (boolean as string)
        body:
          type: string
          description: Full body content HTML
        lastModified:
          type: string
          format: date-time
          description: Last modification date
        hasStoryPackage:
          type: string
          description: Whether content has related story package (boolean as string)
        score:
          type: string
          description: Relevance score (float as string)
        standfirst:
          type: string
          description: Standfirst HTML
        shortUrl:
          type: string
          format: uri
          description: Short URL
        thumbnail:
          type: string
          format: uri
          description: Thumbnail image URL
        wordcount:
          type: string
          description: Word count (integer as string)
        commentable:
          type: string
          description: Whether comments are allowed (boolean as string)
        isPremoderated:
          type: string
          description: Whether comments are premoderated (boolean as string)
        allowUgc:
          type: string
          description: Whether user generated content is allowed (boolean as string)
        byline:
          type: string
          description: Byline HTML
        publication:
          type: string
          description: Publication name
        internalPageCode:
          type: string
          description: Internal page code
        productionOffice:
          type: string
          description: Production office
        shouldHideAdverts:
          type: string
          description: Whether to hide adverts (boolean as string)
        liveBloggingNow:
          type: string
          description: Whether currently live blogging (boolean as string)
        commentCloseDate:
          type: string
          format: date-time
          description: Date when comments were closed
        starRating:
          type: string
          description: Star rating (integer as string)

    ContentSearchResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            startIndex:
              type: integer
              description: Starting index of results
              example: 1
            pageSize:
              type: integer
              description: Number of items per page
              example: 10
            currentPage:
              type: integer
              description: Current page number
              example: 1
            pages:
              type: integer
              description: Total number of pages
              example: 1
            orderBy:
              type: string
              description: Sort order used
              example: "newest"
            results:
              type: array
              items:
                $ref: '#/components/schemas/ContentItem'
          required:
            - results

    SingleItemResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            content:
              $ref: '#/components/schemas/ContentItem'
            leadContent:
              type: array
              description: Key pieces of lead content for tags
              items:
                $ref: '#/components/schemas/ContentItem'
            storyPackage:
              type: array
              description: Related content in same story
              items:
                $ref: '#/components/schemas/ContentItem'
            editorsPicks:
              type: array
              description: Editor-chosen content
              items:
                $ref: '#/components/schemas/ContentItem'
            mostViewed:
              type: array
              description: Most viewed content
              items:
                $ref: '#/components/schemas/ContentItem'
            relatedContent:
              type: array
              description: Related content items
              items:
                $ref: '#/components/schemas/ContentItem'

    Tag:
      type: object
      properties:
        id:
          type: string
          description: Tag identifier
          example: "katine/football"
        type:
          type: string
          description: Type of tag
          enum: [keyword, series, contributor, tone, type, blog]
          example: "keyword"
        webTitle:
          type: string
          description: Web title of the tag
          example: "Football"
        webUrl:
          type: string
          format: uri
          description: Web URL of the tag
          example: "http://www.theguardian.com/katine/football"
        apiUrl:
          type: string
          format: uri
          description: API URL of the tag
          example: "http://beta.content.guardianapis.com/katine/football"
        sectionId:
          type: string
          description: Section ID of the tag
          example: "katine"
        sectionName:
          type: string
          description: Section name of the tag
          example: "Katine"
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - id
        - type
        - webTitle

    TagsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            startIndex:
              type: integer
              description: Starting index of results
              example: 1
            pageSize:
              type: integer
              description: Number of items per page
              example: 10
            currentPage:
              type: integer
              description: Current page number
              example: 1
            pages:
              type: integer
              description: Total number of pages
              example: 7
            results:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          required:
            - results

    Section:
      type: object
      properties:
        id:
          type: string
          description: Section identifier
          example: "football"
        webTitle:
          type: string
          description: Web title of the section
          example: "Football"
        webUrl:
          type: string
          format: uri
          description: Web URL of the section
          example: "https://www.theguardian.com/football"
        apiUrl:
          type: string
          format: uri
          description: API URL of the section
          example: "https://content.guardianapis.com/football"
        editions:
          type: array
          items:
            $ref: '#/components/schemas/Edition'
      required:
        - id
        - webTitle

    SectionsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Section'
          required:
            - results

    Edition:
      type: object
      properties:
        id:
          type: string
          description: Edition identifier
          example: "au"
        path:
          type: string
          description: Path of the edition
          example: "au"
        edition:
          type: string
          description: Edition name
          example: "AU"
        webTitle:
          type: string
          description: Web title of the edition
          example: "new guardian australia front page"
        webUrl:
          type: string
          format: uri
          description: Web URL of the edition
          example: "https://www.theguardian.com/au"
        apiUrl:
          type: string
          format: uri
          description: API URL of the edition
          example: "https://content.guardianapis.com/au"
        code:
          type: string
          description: Edition code
          example: "default"
      required:
        - id
        - edition

    EditionsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Edition'
          required:
            - results

    Element:
      type: object
      description: Media element (image, video, audio)
      properties:
        id:
          type: string
          description: Element identifier
        relation:
          type: string
          description: Relationship to content
        type:
          type: string
          enum: [image, video, audio]
          description: Type of element
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'

    Asset:
      type: object
      description: Media asset within an element
      properties:
        type:
          type: string
          description: Asset type
        mimeType:
          type: string
          description: MIME type of the asset
        file:
          type: string
          format: uri
          description: URL of the asset file
        typeData:
          type: object
          description: Additional type-specific data

    Reference:
      type: object
      description: Reference data (ISBN, IMDB, etc.)
      properties:
        type:
          type: string
          description: Type of reference
          enum: [
            author, bisac-prefix, esa-cricket-match, esa-football-match,
            esa-football-team, esa-football-tournament, isbn, imdb, musicbrainz,
            musicbrainzgenre, opta-cricket-match, opta-football-match,
            opta-football-team, opta-football-tournament, pa-football-competition,
            pa-football-match, pa-football-team, r1-film, reuters-index-ric,
            reuters-stock-ric, witness-assignment
          ]
        id:
          type: string
          description: Reference identifier

    ContentBlocks:
      type: object
      description: Content blocks for articles and live blogs
      properties:
        main:
          $ref: '#/components/schemas/Block'
        body:
          type: array
          items:
            $ref: '#/components/schemas/Block'

    Block:
      type: object
      description: Individual content block
      properties:
        id:
          type: string
          description: Block identifier
        bodyHtml:
          type: string
          description: HTML content of the block
        bodyTextSummary:
          type: string
          description: Text summary of the block
        title:
          type: string
          description: Block title
        attributes:
          type: object
          description: Block attributes
        published:
          type: boolean
          description: Whether the block is published
        createdDate:
          type: string
          format: date-time
          description: Block creation date
        firstPublishedDate:
          type: string
          format: date-time
          description: First publication date
        publishedDate:
          type: string
          format: date-time
          description: Publication date
        lastModifiedDate:
          type: string
          format: date-time
          description: Last modification date
        contributors:
          type: array
          items:
            type: string
          description: Block contributors
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Element'

tags:
  - name: Content
    description: Search and retrieve Guardian content
  - name: Tags
    description: Manage content tags and categories
  - name: Sections
    description: Browse content sections
  - name: Editions
    description: Access regional editions
  - name: Single Item
    description: Retrieve individual items by path